"""
Django settings for supplified_admin project.

For more information on this file, see
https://docs.djangoproject.com/en/1.7/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.7/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
BASE_DIR = os.path.dirname(os.path.dirname(__file__))

EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'no-reply@supplified.com'
EMAIL_HOST_PASSWORD = 'supplified@123'
PDF_ROOT=BASE_DIR+'pdf/'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.7/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=p0(p46*8*sbpizbwc&p)&pzo2dd(jzih*6otq$7#ug$7_*qbp'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

TEMPLATE_DEBUG = True

from django.conf.global_settings import TEMPLATE_CONTEXT_PROCESSORS as TCP

TEMPLATE_CONTEXT_PROCESSORS = tuple(TCP) + (
    'django.core.context_processors.request',
    'django.contrib.auth.context_processors.auth',
)
ALLOWED_HOSTS = []

# Application definition
TEMPLATE_DIRS = (
    BASE_DIR + '/Products/templates',
    BASE_DIR + '/admin/templates',
)

INSTALLED_APPS = (
    #'wpadmin',
    'suit',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'import_export',
    'supplified',
    'Category',
    'Products',
    'Stores',
    'Brands',
    'Orders',
    'Email',
)
SUIT_CONFIG = {
    'ADMIN_NAME': 'Supplified CMS',
    'MENU': (

        'sites',
        # Rename app and set icon
        {'app': 'auth', 'label': 'Access Management', 'icon':'icon-lock'},
        '-',

        # Custom app and model with permissions
	{'label': 'Base Product (Testing)', 'permissions': 'auth.add_user', 'url': '/admin/Products/baseproduct/'},
        {'label': 'Subscribed Product (Testing)', 'permissions': 'auth.add_user', 'url': '/admin/Products/subscribedproduct/'},
        '-',
    {'label': 'Category (Live)', 'permissions': 'auth.add_user', 'url': '/admin/Category/category/'},
        {'label': 'Bulk Template (Testing)', 'permissions': 'auth.add_user', 'url': '/admin/bulk/template'},
        {'label': 'Manage Product (Testing)', 'permissions': 'auth.add_user', 'models': [
            {'label': 'View All Product (Export)', 'url': '/admin/view/product'},
            {'label': 'Bulk Product Upload', 'url': '/admin/bulk/product'},
            {'label': 'Bulk Image Upload', 'url': '/admin/bulk/media'},
            {'label': 'Bulk Image Zip Upload', 'url': '/admin/bulk/mediazip'},
	]},
	'-',
	{'label': 'Manage Order (Live)', 'permissions': 'auth.add_user', 'models': [
            {'label': 'Order Header', 'url': '/admin/Orders/orderheader'},
            {'label': 'Order Line', 'url': '/admin/Orders/orderline'},
            {'label':'Pickup Line','url':'/admin/Orders/pickupline'},
              {'label':'Delivery Line','url':'/admin/Orders/deliveryline'}

        ]},
	'-',
	{'label': 'User Management (Live)', 'permissions': 'auth.add_user', 'models': [
	    {'label': 'Users', 'url': '/admin/Orders/login'},
	]},
	'-',
        {'label': 'Store (Testing)', 'permissions': 'auth.add_user', 'models': [
	    {'label': 'Store', 'url': '/admin/Stores/store'},
            {'label': 'Store Price (Bulk)', 'url': '/admin/bulk/price'},
        ]},

    '-',
    {'label': 'Change Logs', 'permissions': 'auth.add_user', 'url': '/admin/supplified/masterimportupload/'},
    )
}
MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
)

ROOT_URLCONF = 'urls'

# Database
# https://docs.djangoproject.com/en/1.7/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'supplifi_ecom_stack2',
        'USER': 'root',
        'PASSWORD': 'password',
        'HOST': 'localhost',   # Or an IP Address that your DB is hosted on
        'PORT': '3306',
    },
    'orders': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'supplifi_ecom_orders',
        'USER': 'root',
        'PASSWORD': 'password',
        'HOST': 'localhost',   # Or an IP Address that your DB is hosted on
        'PORT': '3306',
    },
    'test_prod_stack2': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'supplifi_ecom_stack2',
        'USER': 'root',
        'PASSWORD': 'supplified',
        'HOST': 'localhost',   # Or an IP Address that your DB is hosted on
        'PORT': '3306',
    },
    #'prod_stack2': {
    #    'ENGINE': 'django.db.backends.mysql',
    #    'NAME': 'supplifi_ecom_stack2',
    #    'USER': 'remote_supp_user',
    #    'PASSWORD': '123ERT#$%&*(df',
    #    'HOST': 'ec2-54-187-86-180.us-west-2.compute.amazonaws.com',   # Or an IP Address that your DB is hosted on
    #    'PORT': '3306',
    #},
}

# Internationalization
# https://docs.djangoproject.com/en/1.7/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.7/howto/static-files/
STATIC_URL = '/admin/static/'

WPADMIN = {
    'admin': {
#        'title': 'Supplified',
        'menu': {
            'top': 'wpadmin.menu.menus.BasicTopMenu',
            'left': 'wpadmin.menu.menus.BasicLeftMenu',
        },
        'dashboard': {
            'breadcrumbs': True,
        },
        'custom_style': STATIC_URL + 'wpadmin/css/themes/midnight.css',
    }
}

PROCESS_CLASSES = {
    'Base Product': {
            'app_name': 'Products',
            'file_name': 'views',
            'class': 'MasterProduct'
        },
    'Subscribed Product': {
            'app_name': 'Products',
            'file_name': 'views',
            'class': 'MasterProduct'
        },
    'Product Image': {
            'app_name': 'Products',
            'file_name': 'bulk_image',
            'class': 'MasterMedia',
        },
    'Store Price Mapping': {
	    'app_name': 'Stores',
            'file_name': 'bulk_store_update',
            'class': 'MasterStorePrice',
	},
    'Category Template': {
	    'app_name': 'Products',
	    'file_name': 'bulk_template',
	    'class': 'Category_Template',
	},
}

ENVIRONMENT_VAR = {'production' : {'instance_id': 'i-0af22cce',
				'dns': 'ec2-54-187-86-180.us-west-2.compute.amazonaws.com',
				'pem': '/home/ubuntu/pems/supplified_prod_ubuntu.pem'},
		    'development' : {'instance_id': 'i-93fa7b4a',
				'dns': 'ec2-52-26-206-60.us-west-2.compute.amazonaws.com',
				'pem': '/home/ubuntu/pems/supplified_prod_ubuntu.pem'}}

CUR_ENV = 'production'

BASE_PATH = os.getcwd()

OGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'standard': {
            'format' : "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt' : "%d/%b/%Y %H:%M:%S"
        },
    },
    'handlers': {
        'null': {
            'level':'DEBUG',
            'class':'django.utils.log.NullHandler',
        },
        'logfile': {
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': BASE_PATH + "/logfile",
            'maxBytes': 50000,
            'backupCount': 2,
            'formatter': 'standard',
        },
        'console':{
            'level':'INFO',
            'class':'logging.StreamHandler',
            'formatter': 'standard'
        },
    },
    'loggers': {
        'django': {
            'handlers':['console'],
            'propagate': True,
            'level':'WARN',
        },
        'django.db.backends': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'Products': {
            'handlers': ['console', 'logfile'],
            'level': 'DEBUG',
        },
    }
}
